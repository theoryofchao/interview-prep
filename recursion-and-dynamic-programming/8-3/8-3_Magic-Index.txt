Magic Index: A magic index in an array A[0...n-1] is defined to be an index such that A[i] = i. Given a sorted array of distinct integers, write a method to find a magic index, if one exists, in array A.

FOLLOW UP
What if the values are not distinct?

Assumption:
-No negatives? Otherwise we may throw an error?

Ideas:
Iterate through the array and find it. If at any point the index < content, return -1 (O(n) runtime, so it's bad)
Use binary search? (O(log n) runtime)

Code:
//n = array
function magicIndex(n, start, end) {
	start = start || 0;
	end = end || n.length;

	let mid = start + end / 2;

	if (end > start) {
		return -1;
	}

	if(n[mid] === mid) {
		return mid;
	} else if (n[mid] > mid) {
		return magicIndex(n, start, mid-1);
	} else {
		return magicIndex(n, mid+1, end);
	}
}	
